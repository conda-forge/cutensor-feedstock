{% set version = "1.7.0.1" %}

package:
  name: cutensor
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}-archive.tar.xz  # [linux64]
  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}-archive.tar.xz  # [ppc64le]
  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}-archive.tar.xz  # [aarch64]
  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}-archive.zip  # [win64]

  sha256: dd3557891371a19e73e7c955efe5383b0bee954aba6a30e4892b0e7acb9deb26  # [linux64]
  sha256: af4ad5e29dcb636f1bf941ed1fd7fc8053eeec4813fbc0b41581e114438e84c8  # [ppc64le]
  sha256: c31f8e4386539434a5d1643ebfed74572011783b4e21b62be52003e3a9de3720  # [aarch64]
  sha256: cdbb53bcc1c7b20ee0aa2dee781644a324d2d5e8065944039024fe22d6b822ab  # [win64]

build:
  number: 1
  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+
  skip: true  # [win32 or cuda_compiler_version not in ("10.2", "11.0", "11.1")]
  script_env:
    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image
    - CUDA_HOME  # [ppc64le or aarch64]
  script:
    - mkdir -p $PREFIX/include                                             # [linux]
    - mv include/* $PREFIX/include/                                        # [linux]
    - mkdir -p $PREFIX/lib                                                 # [linux]
    - mv lib/{{ cuda_compiler_version }}/*.so* $PREFIX/lib/                # [linux and cuda_compiler_version in ("10.2", "11.0")]
    - mv lib/11/*.so* $PREFIX/lib/                                         # [linux and cuda_compiler_version == "11.1"]
    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]

    - copy include\\cutensor.h %LIBRARY_INC%\\                             # [win64]
    - copy include\\cutensorMg.h %LIBRARY_INC%\\                           # [win64]
    - mkdir %LIBRARY_INC%\\cutensor                                        # [win64]
    - copy include\\cutensor\\types.h %LIBRARY_INC%\\cutensor              # [win64]
    - del lib\\{{ cuda_compiler_version }}\\*static*                       # [win64 and cuda_compiler_version in ("10.2", "11.0")]
    - copy lib\\{{ cuda_compiler_version }}\\*.dll %LIBRARY_BIN%\\         # [win64 and cuda_compiler_version in ("10.2", "11.0")]
    - copy lib\\{{ cuda_compiler_version }}\\*.lib %LIBRARY_LIB%\\         # [win64 and cuda_compiler_version in ("10.2", "11.0")]
    - del lib\\11\\*static*                                                # [win64 and cuda_compiler_version in ("11.1", )]
    - copy lib\\11\\*.dll %LIBRARY_BIN%\\                                  # [win64 and cuda_compiler_version in ("11.1", )]
    - copy lib\\11\\*.lib %LIBRARY_LIB%\\                                  # [win64 and cuda_compiler_version in ("11.1", )]
  ignore_run_exports:
    - cudatoolkit
  run_exports:
    - {{ pin_subpackage('cutensor') }}
  missing_dso_whitelist:
    # suppress warning, as these are included in the run dependency
    - '*/libcublasLt.so*'  # [linux and cuda_compiler_version in ("11.0", "11.1")]
    - '*/cublasLt64*.dll'  # [win64 and cuda_compiler_version in ("11.0", "11.1")]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
  host:
    - patchelf >=0.12  # [linux]
  run:
    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in ("10.2", "11.0")]
    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == "11.1"]
  run_constrained:
    # Only GLIBC_2.17 or older symbols present
    - __glibc >=2.17      # [linux]
    - cuda-version 10.2        # [cuda_compiler_version == "10.2"]
    - cuda-version 11.0        # [cuda_compiler_version == "11.0"]
    - cuda-version >=11.1,<12  # [cuda_compiler_version == "11.1"]

test:
  requires:
    - git
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux]
    # make sure we pick up the version matching the docker,
    # or the linker would complain 
    - cudatoolkit {{ cuda_compiler_version }}
  files:
    - test_load_elf.c        # [linux]

about:
  home: https://developer.nvidia.com/cutensor
  license: LicenseRef-cuTENSOR-Software-License-Agreement
  license_url: https://docs.nvidia.com/cuda/cutensor/license.html
  license_file: LICENSE
  summary: Tensor Linear Algebra on NVIDIA GPUs
  description: |
    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear
    algebra library providing tensor contraction, reduction and elementwise
    operations. cuTENSOR is used to accelerate applications in the areas of
    deep learning training and inference, computer vision, quantum chemistry
    and computational physics.

    License Agreements:- The packages are governed by the NVIDIA cuTENSOR
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -
    https://docs.nvidia.com/cuda/cutensor/license.html
  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html
  dev_url: https://developer.nvidia.com/cutensor/downloads

extra:
  recipe-maintainers:
    - JeremyWangNVDA
    - leofang
    - jakirkham
    - mtjrider
